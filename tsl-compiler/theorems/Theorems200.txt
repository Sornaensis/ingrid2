{
    "theorems":[
{
            "text": "if nodeCliqueCover > nodeInd then { maxdeg >= 3*nodes/(3*nodeInd - 1) - 1 };",
            "name": "Theorem",
            "idnum": 181,
            "disp": ""
        },
        {
            "text": "
maxClique >= 2*maxb(nodes)/(maxb(nodes)-mindeg+nodeInd);
nodes >= maxb(maxClique)*(minb(mindeg)-(maxb(nodeInd)))/(maxb(maxClique)-(2.0));",
            "name": "Theorem",
            "idnum": 182,
            "disp": ""
        },
        {
            "text": "if nodeInd <= 2 then { maxClique >= (1/2)*(sqrt(9+8*nodes)-3) };",
            "name": "Theorem",
            "idnum": 183,
            "disp": ""
        },
        {
            "text": "
            _e1 is (maxb(nodes)*(maxb(nodes)-1)+1) / (2-(maxb(nodes)-minb(mindeg)-1)*(maxb(nodes)-minb(maxClique)));
_e2 is (minb(nodes)*(minb(nodes)-1)+1) / (2-(minb(nodes)-minb(mindeg)-1)*(minb(nodes)-minb(maxClique)));
edges >= minimum(_e1,_e2);
_c1 is floor(minb(nodes)-(minb(nodes)*(minb(nodes)-1)-2*maxb(edges))/(2*(minb(nodes)-minb(mindeg)-1)));
_c2 is floor(maxb(nodes)-(maxb(nodes)*(maxb(nodes)-1)-2*maxb(edges))/(2*(maxb(nodes)-minb(mindeg)-1)));
if minb(nodes) > minb(mindeg)+1 and maxb(nodes) > minb(mindeg)+1 then 
{
    maxClique <= minimum(_c1, _c2)
};",
            "name": "Theorem",
            "idnum": 184,
            "disp": ""
        },
        {
            "text": "if nodeCliqueCover <= 2 then { maxClique == chromaticNum };",
            "name": "Theorem",
            "idnum": 185,
            "disp": ""
        },
        {
            "text": "if nodeInd == 2 and nodeCliqueCover >= 4 then { nodes >= 11 };",
            "name": "Theorem",
            "idnum": 186,
            "disp": ""
        },
        {
            "text": "
            if regular and maxdeg <= nodes - 2 then 
{ 
    maxClique <= (1.0/2.0)*maxb(nodes)-((minb(nodeInd)-(1.0))*(minb(nodeInd)-(2.0))/(2.0*(maxb(nodes)-(minb(maxdeg))-(1.0)))),
    nodes >= minb(maxClique)+minb(maxdeg)/2.0+sqrt(4.0*minb(maxClique)**2.0-(4.0*minb(maxClique)*minb(maxdeg))-(4.0*minb(maxClique))+minb(maxdeg)**2.0+2.0*minb(maxdeg)+4.0*minb(nodeInd)**2.0-(12.0*minb(nodeInd))+9.0)/2.0+1.0/2.0,
    nodeInd <= sqrt(8.0*minb(maxClique)*minb(maxdeg)-(8.0*minb(maxClique)*maxb(nodes))+8.0*minb(maxClique)-(4.0*minb(maxdeg)*maxb(nodes))+4.0*maxb(nodes)**2.0-(4.0*maxb(nodes))+1.0)/2.0+3.0/2.0,
    maxdeg <= (2.0*minb(maxClique)*maxb(nodes)-(2.0*minb(maxClique))+minb(nodeInd)**2.0-(3.0*minb(nodeInd))-(maxb(nodes)**2.0)+maxb(nodes)+2.0)/(2.0*minb(maxClique)-(maxb(nodes))) 
};",
            "name": "Theorem",
            "idnum": 187,
            "disp": ""
        },
        {
            "text": "
            if undefined girth then 
{ 
    thickness == 1 
} 
else 
{ 
    thickness >= minb(edges)*(1-2/minb(girth))/(nodes - 2),
    edges <= minb(girth)*maxb(thickness)*(maxb(nodes)-(2.0))/(minb(girth)-(2.0)),
    _g is 2.0*minb(edges)/(minb(edges)-(maxb(nodes)*maxb(thickness))+2.0*maxb(thickness)),
    if _g > 2 and _g <= minb(nodes) then 
    {
        girth <= _g
    }
};",
            "name": "Theorem",
            "idnum": 188,
            "disp": ""
        },
        {
            "text": "if nodes > 10 or nodes < 9 then { thickness <= (nodes+7)/6 } else if nodes == 9 or nodes == 10 then { thickness <= 3 };",
            "name": "Theorem",
            "idnum": 189,
            "disp": ""
        },
        {
            "text": "thickness <= (1/2)*(edgeChromatic + 1);",
            "name": "Theorem",
            "idnum": 190,
            "disp": ""
        },
        {
            "text": "thickness <= maximum(bandwidth/2,1);",
            "name": "Theorem",
            "idnum": 191,
            "disp": ""
        },
        {
            "text": "if maxClique == 2 then { nodeInd >= mindeg * (diameter+4)/4 };",
            "name": "Theorem",
            "idnum": 192,
            "disp": ""
        },
        {
            "text": "thickness <= (1/2)*(nodeCover+1);",
            "name": "Theorem",
            "idnum": 193,
            "disp": ""
        },
        {
            "text": "if maxClique == 9 or maxClique == 10 then { thickness >= 3 } else { thickness >= (maxClique + 7)/6 };",
            "name": "Theorem",
            "idnum": 194,
            "disp": ""
        },{
            "text": "maxClique >= nodes + (1/2)*(nodeInd-1)*(nodeInd-2)+(nodes/2)*(nodes-1)+edges : useMaxFor(nodes);",
            "name": "Theorem",
            "idnum": 195,
            "disp": ""
        },
        {
            "text": "nosolve edges <= (nodes/2)*(nodes-1)-maxClique*(nodes-maxdeg-1)-(1/2)*(nodeInd-1)*(nodeInd-2);",
            "name": "Theorem",
            "idnum": 196,
            "disp": ""
        },
        {
            "text": "
if nodes >= 3 then 
{ 
    edgeCliqueCover <= thickness*(2*maxb(nodes)-numOfComponents-3),
    nodes >= (minb(edgeCliqueCover)+maxb(thickness)*(minb(numOfComponents)+3.0))/(2.0*maxb(thickness))    
};",
            "name": "Theorem",
            "idnum": 197,
            "disp": ""
        },
        {
            "text": "
nodeCover <= maxb(nodes) - maxb(nodes)/chromaticNum;
nodes >= maxb(chromaticNum)*minb(nodeCover)/(maxb(chromaticNum)-(1.0));",
            "name": "Theorem",
            "idnum": 198,
            "disp": ""
        },
        {
            "text": "bandwidth <= nodes - 1 - (nodes - nodeCover)/2;",
            "name": "Theorem",
            "idnum": 199,
            "disp": ""
        },
        {
            "text": "if nodes > 2*edgeInd + 1 then { nodeCover <= 2*edgeInd - nodeConnec };",
            "name": "Theorem",
            "idnum": 200,
            "disp": ""
        }    ]
}
