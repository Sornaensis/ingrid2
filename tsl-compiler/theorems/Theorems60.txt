
{
    "theorems":[
{
            "text": "if chromaticNum <= 2 or bipartite then { bipartite, chromaticNum <= 2 };",
            "name": "Theorem",
            "idnum": 41,
            "disp": ""
        },
        {
            "text": "if radius == 1 or maxdeg ==  nodes-1 then { maxdeg == nodes - 1, radius == 1};",
            "name": "Theorem",
            "idnum": 42,
            "disp": ""
        },
        {
            "text": "if (forest and connected) or tree then { tree, forest, connected };",
            "name": "Theorem",
            "idnum": 43,
            "disp": ""
        },
        {
            "text": "if connected or nodeConnec >= 1 or numOfComponents == 1 or radius <= nodes/2 or diameter <= nodes-1 then { connected, nodeConnec >= 1, numOfComponents == 1, radius <= nodes/2, diameter <= nodes-1 };",
            "name": "Theorem",
            "idnum": 44,
            "disp": ""
        },
        {
            "text": "if cycle or (maxdeg == 2 and mindeg == 2 and connected) then { cycle, maxdeg == 2, mindeg == 2, connected };",
            "name": "Theorem",
            "idnum": 45,
            "disp": ""
        },
        {
            "text": "if regular or mindeg == maxdeg then { regular, mindeg == maxdeg };",
            "name": "Theorem",
            "idnum": 46,
            "disp": ""
        },
        {
            "text": "if genus == 0 or planar or thickness == 1 then { genus == 0, planar, thickness == 1 };",
            "name": "Theorem",
            "idnum": 47,
            "disp": ""
        },
        {
            "text": "if forest then { planar, chromaticNum == 2, mindeg == 2 };",
            "name": "Theorem",
            "idnum": 48,
            "disp": ""
        },
        {
            "text": "
            if cycle then 
            { 
                planar, 
                not forest, 
                crossing == 0, 
                nodes >= 3, 
                edges >= 3, 
                arboricity == 2, 
                nodeCover == (nodes + 1)/2, 
                edgeCover == (nodes + 1)/2, 
                nodeInd == nodes/2, 
                edgeInd == nodes/2, 
                radius == edgeInd, 
                girth == circumference, 
                circumference == nodes, 
                edgeChromatic == chromaticNum, 
                nodes >= 2*nodeCover-1, 
                nodes <= 2*nodeCover, 
                nodes >= 2*edgeInd, 
                nodes <= 2*edgeInd + 1, 
                nodeConnec == 2, 
                regular, 
                bandwidth == 2,
                if nodes > 3 then 
                { 
                    maxClique == 2 
                } 
                else 
                { 
                    maxClique == 3 
                },
                if even nodes then 
                { 
                    chromaticNum == 2 
                } 
                else 
                { 
                    chromaticNum == 3 
                }, 
                if chromaticNum == 2 then 
                { 
                    even nodes 
                } 
                else 
                { 
                    odd nodes 
                }, 
                if maxClique == 2 then 
                { 
                    nodes >= 4 
                } 
                else 
                { 
                    nodes == 3 
                }, 
                if nodes == 3 then 
                { 
                    nodeCliqueCover == 1 
                } 
                else 
                { 
                    nodeCliqueCover == nodeCover 
                }
            };",
            "name": "Theorem",
            "idnum": 49,
            "disp": ""
        },
        {
            "text": "if forest or edges == nodes - numOfComponents or arboricity == 1 or undefined girth or undefined circumference then { forest, edges == nodes - numOfComponents, arboricity == 1, undefined girth, undefined circumference };",
            "name": "Theorem",
            "idnum": 50,
            "disp": ""
        },
        {
            "text": "arboricity >= chromaticNum / 2;",
            "name": "Theorem",
            "idnum": 51,
            "disp": ""
        },
        {
            "text": "if (connected and not cycle and (not complete or even nodes)) or (maxClique <= maxdeg and maxdeg >= 4 and regular) then { arboricity <= (1 + maxdeg)/2 }; arboricity <= 1 + spectralRadius/2;",
            "name": "Theorem",
            "idnum": 52,
            "disp": ""
        },
        {
            "text": "if defined girth then
{
    _P is maxb(nodes),
    arboricity <= chromaticNum - chromaticNum/(1 + _P/((girth - 1)/2)*chromaticNum),
    nodes >= minb(arboricity)*(-(minb(girth))+1.0)/(2.0*maxb(chromaticNum)*(minb(arboricity)-(maxb(chromaticNum))))
};",
            "name": "Theorem",
            "idnum": 53,
            "disp": ""
        },
        {
            "text": "if planar then { mindeg <= 5, maxClique <= 4, arboricity <= 3, crossing == 0 };",
            "name": "Theorem",
            "idnum": 54,
            "disp": ""
        },
        {
            "text": "edges >= (minb(maxdeg)+(minb(nodes)-(1.0))*minb(mindeg))/2.0;
maxdeg <= 2.0*maxb(edges)-(minb(mindeg)*minb(nodes))+minb(mindeg);
nodes <= (2.0*maxb(edges)-(minb(maxdeg))+minb(mindeg))/minb(mindeg);
mindeg <= (2.0*maxb(edges)-(minb(maxdeg)))/(minb(nodes)-(1.0));
",
            "name": "Theorem",
            "idnum": 55,
            "disp": ""
        },
        {
            "text": "edges <= ((maxb(nodes)-(1.0))*maxb(maxdeg)+maxb(mindeg))/2.0;
nodes >= (2.0*minb(edges)+maxb(maxdeg)-(maxb(mindeg)))/maxb(maxdeg);
maxdeg >= (2.0*minb(edges)-(maxb(mindeg)))/(maxb(nodes)-(1.0));
mindeg >= 2.0*minb(edges)-(maxb(maxdeg)*maxb(nodes))+maxb(maxdeg);",
            "name": "Theorem",
            "idnum": 56,
            "disp": ""
        },
        {
            "text": "if regular and odd mindeg then { even nodes };",
            "name": "Theorem",
            "idnum": 57,
            "disp": ""
        },
        {
            "text": "_P is maxb(nodes);
maxClique >= _P/(_P-spectralRadius)-1/3;
nodes >= minb(spectralRadius)*(3.0*maxb(maxClique)+1.0)/(3.0*maxb(maxClique)-(2.0));",
            "name": "Theorem",
            "idnum": 58,
            "disp": ""
        },
        {
            "text": "nosolve crossing <= (1/4)*floor(nodes/2)*floor((nodes-1)/2)*floor((nodes-2)/2)*floor((nodes-3)/2); if complete and nodes <= 10 then {nosolve crossing >= (1/4)*floor(nodes/2)*floor((nodes-1)/2)*floor((nodes-2)/2)*floor((nodes-3)/2)};",
            "name": "Theorem",
            "idnum": 59,
            "disp": ""
        },
        {
            "text": "if defined girth and (minb(nodeConnec) > 0.0 or minb(mindeg) > 1.0) then 
{
    genus >= (1.0/2.0)*minb(edges)*(1.0-(2.0/minb(girth)))-(maxb(nodes)/2.0)+minb(numOfComponents),
    edges <= minb(girth)*(2.0*maxb(genus)+maxb(nodes)-(2.0*minb(numOfComponents)))/(minb(girth)-(2.0)),
    girth <= 2.0*minb(edges)/(minb(edges)-(2.0*maxb(genus))-(maxb(nodes))+2.0*minb(numOfComponents)),
    nodes >= minb(edges)-(2.0*minb(edges)/minb(girth))-(2.0*maxb(genus))+2.0*minb(numOfComponents),
    numOfComponents <= -(minb(edges)/2.0)+minb(edges)/minb(girth)+maxb(genus)+maxb(nodes)/2.0
};",
            "name": "Theorem",
            "idnum": 60,
            "disp": ""
        }    ]
}
