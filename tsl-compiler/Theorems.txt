{ "theorems" :
 [         { 
            "name": "Theorem",
            "disp": "",
            "idnum": 1,
            "text": "edges <= (1/2)*(nodes-1)*(nodes-2)+nodeConnec;" 
        },
        { 
            "name": "Theorem",
            "disp": "",
            "idnum": 2,
            "text": "chromaticNum <= (1/2)*(nodeCover+maxClique+1);" 
        }, 
        { 
            "name": "Theorem",
            "disp": "",
            "idnum": 3,
            "text": "spectralRadius >= 2*edges/nodes;" 
        },
        { 
            "name": "Theorem",
            "disp": "",
            "idnum": 4,
            "text": "spectralRadius <= (2*edges*nodeCover/(nodeCover+1))**(1/2);" 
        }, 
        { 
            "name": "Theorem",
            "disp": "",
            "idnum": 5,
            "text": "maxClique >= nodes**2/(nodes**2-2*edges);" 
        }, 
        { 
            "name": "Theorem",
            "disp": "",
            "idnum": 6,
            "text": "spectralRadius <= maxdeg;" 
        }, 
        { 
            "name": "Theorem",
            "disp": "",
            "idnum": 7,
            "text": "if undefined diameter and mindeg > 3*nodeConnec - 1 then { nodes >= 1 + mindeg + diameter*nodeConnec + (diameter/3)*(mindeg - 3*nodeConnec + 1) } else if undefined diameter then { nodes >= nodeConnec * (diameter-3) + 2*mindeg + 2 };" 
        }, 
        { 
            "name": "Theorem",
            "disp": "",
            "idnum": 8,
            "text": "nodes >= maxdeg + 1 + (mindeg + 1)*(numOfComponents - 1);" 
        }, 
        { 
            "name": "Theorem",
            "disp": "",
            "idnum": 9,
            "text": "edgeCliqueCover <= nodes**2/4;" 
        }, 
        { 
            "name": "Theorem",
            "disp": "",
            "idnum": 10,
            "text": "diameter <= 2*radius;" 
        }, 
        { 
            "name": "Theorem",
            "disp": "",
            "idnum": 11,
            "text": "edgeInd <= nodes / 2;" 
        }, 
        { 
            "name": "Theorem",
            "disp": "",
            "idnum": 12,
            "text": "edgeInd >= nodes/(maxdeg + 1);" 
        }, 
        {
            "text": "if g == 2*d + 1 then { regular };",
            "name": "Theorem",
            "idnum": 13,
            "disp": ""
        },
        {
            "text": "chromaticNum >= nodes / (nodes - spectralRadius);",
            "name": "Theorem",
            "idnum": 14,
            "disp": ""
        },
        {
            "text": "if mindeg >= 3 then { edges >= 2**(girth/2) + nodes - numOfComponents };",
            "name": "Theorem",
            "idnum": 15,
            "disp": ""
        },
        {
            "text": "if nodeConnec == 0 then { edgeConnec == 0 }; if edgeConnec == 0 then { nodeConnec == 0};",
            "name": "Theorem",
            "idnum": 16,
            "disp": ""
        },
        {
            "text": "edges <= (1/2)*(edgeCliqueCover*maxClique*(maxClique-1));",
            "name": "Theorem",
            "idnum": 17,
            "disp": ""
        },
        {
            "text": "chromaticNum <= (1/2)*(7+(1+48*genus)**(1/2));",
            "name": "Theorem",
            "idnum": 18,
            "disp": ""
        },
        {
            "text": "if maxClique == 2 then { maxdeg <= nodeInd, edges <= nodeCover * nodeInd };",
            "name": "Theorem",
            "idnum": 19,
            "disp": ""
        },
        {
            "text": "if chromaticNum == 2 then { edgeInd == nodeCover, nodeInd == nodeCliqueCover, edgeChromatic == maxdeg, even girth, even circumference }; if chromaticNum == 2 and nodes > 2 then { not complete };",
            "name": "Theorem",
            "idnum": 20,
            "disp": ""
        },
        {
            "text": "genus <= ((nodes-3)*(nodes-4)+11)/12;",
            "name": "Theorem",
            "idnum": 21,
            "disp": ""
        },
        {
            "text": "if edges  > maxdeg*edgeInd then { edgeChromatic == maxdeg + 1 };",
            "name": "Theorem",
            "idnum": 22,
            "disp": ""
        },
        {
            "text": "edgeCliqueCover <= edgeCover * edgeInd;",
            "name": "Theorem",
            "idnum": 23,
            "disp": ""
        },
        {
            "text": "null;",
            "name": "Theorem",
            "idnum": 24,
            "disp": ""
        },
        {
            "text": "edgeCover >= (1/2)*nodes;",
            "name": "Theorem",
            "idnum": 25,
            "disp": ""
        },
        {
            "text": "edges <= (1/2)*(nodes - 1)*(nodes-2)+nodes/domination - 1;",
            "name": "Theorem",
            "idnum": 26,
            "disp": ""
        },
        {
            "text": "edgeCover <= nodes*maxdeg/(1 + maxdeg);",
            "name": "Theorem",
            "idnum": 27,
            "disp": ""
        },
        {
            "text": "if diameter <= 3 then { maxdeg <= nodes - diameter + 1 } else { maxdeg <= nodes - nodeConnec*(diameter - 4)-3 };",
            "name": "Theorem",
            "idnum": 28,
            "disp": ""
        },
        {
            "text": "edgeCliqueCover <= edges - (1/2)*maxClique(maxClique - 1)+1;",
            "name": "Theorem",
            "idnum": 29,
            "disp": ""
        },
        {
            "text": "if connected and radius <= min(2,nodes/2) then { edges <= (1/2)*nodes*(nodes-radius) } else if connected and radius >= 3 and radius <= nodes/2 then { edges <= (1/2)*(nodes**2+4*radius*nodes+5*nodes+4*radius**2-6*radius) };",
            "name": "Theorem",
            "idnum": 30,
            "disp": ""
        },
        {
            "text": "chromaticNum <= (nodes + 1 )**2/(4*nodeCliqueCover);",
            "name": "Theorem",
            "idnum": 31,
            "disp": ""
        },
        {
            "text": "chromaticNum >= 2*nodes**(1/2)-nodeCliqueCover;",
            "name": "Theorem",
            "idnum": 32,
            "disp": ""
        },
        {
            "text": "domination <= nodes + 1 - (1+2*edges)**(1/2);",
            "name": "Theorem",
            "idnum": 33,
            "disp": ""
        },
        {
            "text": "if nodeConnec > 0 and not tree then { girth <= 2*diameter+1 };",
            "name": "Theorem",
            "idnum": 34,
            "disp": ""
        },
        {
            "text": "if planar and maxClique < 3 then { nodeInd >= (1/3)*(nodes+1), nodeCover <= (2*nodes-1)/3 } else if planar then { maxClique >= 3 }; ",
            "name": "Theorem",
            "idnum": 35,
            "disp": ""
        },
        {
            "text": "if not planar then { maxdeg >= 3, nodes >= 5, edges >= 9, edgeInd >= 2, nodeCover >= 3, edgeCover >= 3, bandwidth >= 4 };",
            "name": "Theorem",
            "idnum": 36,
            "disp": ""
        },
        {
            "text": "edges <= numOfComponents - 1 + (nodes+2-2*numOfComponents)*(nodes+1-2*numOfComponents)/2;",
            "name": "Theorem",
            "idnum": 37,
            "disp": ""
        },
        {
            "text": "domination >= nodes / (maxdeg + 1);",
            "name": "Theorem",
            "idnum": 38,
            "disp": ""
        },
        {
            "text": "if girth >= 4 or maxClique <= 2 then { maxClique <= 2, girth >= 4 };",
            "name": "Theorem",
            "idnum": 39,
            "disp": ""
        },
        {
            "text": "if complete or mindeg == nodes - 1 or nodeInd == 1 or nodeCliqueCover == 1 or edgeCliqueCover == 1 or diameter == 1 then { complete, mindeg == nodes - 1, nodeInd == 1, nodeCliqueCover == 1, edgeCliqueCover == 1, diameter == 1};",
            "name": "Theorem",
            "idnum": 40,
            "disp": ""
        },
        {
            "text": "if chromaticNum <= 2 or bipartite then { bipartite, chromaticNum <= 2 };",
            "name": "Theorem",
            "idnum": 41,
            "disp": ""
        },
        {
            "text": "if radius == 1 or maxdeg ==  nodes-1 then { maxdeg == nodes - 1, radius == 1};",
            "name": "Theorem",
            "idnum": 42,
            "disp": ""
        },
        {
            "text": "if (forest and connected) or tree then { tree, forest and connected };",
            "name": "Theorem",
            "idnum": 43,
            "disp": ""
        },
        {
            "text": "if nodeConnec >= 1 or numOfComponents == 1 or radius <= nodes/2 or diameter <= nodes-1 then { nodeConnec >= 1, numOfComponents == 1, radius <= nodes/2, diameter <= nodes-1 };",
            "name": "Theorem",
            "idnum": 44,
            "disp": ""
        },
        {
            "text": "if cycle or (maxdeg == 2 and mindeg == 2 and connected) then { cycle, maxdeg == 2, mindeg == 2, connected };",
            "name": "Theorem",
            "idnum": 45,
            "disp": ""
        },
        {
            "text": "if regular or mindeg == maxdeg then { regular, mindeg == maxdeg };",
            "name": "Theorem",
            "idnum": 46,
            "disp": ""
        },
        {
            "text": "if genus == 0 or planar or thickness == 1 then { genus == 0, planar, thickness == 1 };",
            "name": "Theorem",
            "idnum": 47,
            "disp": ""
        },
        {
            "text": "if forest then { planar, chromaticNum == 2, mindeg == 2 };",
            "name": "Theorem",
            "idnum": 48,
            "disp": ""
        },
        {
            "text": "if cycle then { planar, not forest, crossing == 0, nodes >= 2, edges >= 3, arboricity == 2, nodeCover == (nodes + 1)/2, edgeCover == (nodes + 1)/2, nodeInd == nodes/2, edgeInd == nodes/2, radius == edgeInd, girth == circumference, circumference == nodes, edgeChromatic == chromaticNum, nodes >= 2*nodeCover-1, nodes <= 2*nodeCover, nodes >= 2*edgeInd, nodes <= 2*edgeInd + 1, nodeConnec == 2, regular, bandwidth == 2 }; if cycle and nodes > 3 then { maxClique == 2 } else { maxClique == 3 }; if cycle and even nodes then { chromaticNum == 2 } else { chromaticNum == 3 }; if cycle and chromaticNum == 2 then { even nodes } else { odd nodes }; if cycle and maxClique == 2 then { nodes >= 4 } else { nodes == 3 }; if cycle and nodes == 3 then { nodeCliqueCover == 1 } else { nodeCliqueCover == nodeCover };",
            "name": "Theorem",
            "idnum": 49,
            "disp": ""
        },
        {
            "text": "if forest or edges == nodes - numOfComponents or arboricity == 1 or undefined girth or undefined circumference then { forest, edges == nodes - numOfComponents, arboricity == 1, undefined girth, undefined circumference };",
            "name": "Theorem",
            "idnum": 50,
            "disp": ""
        }
        ]
}
